{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ThemeSelector/ThemeSelector.module.css","components/ContactListItem/ContactListItem.module.css","components/NameOfContactExist/NameOfContactExist.module.css","components/FillInEntryFields/FillInEntryFields.module.css","components/ContactForm/NameExist.module.css","components/ContactForm/FillInEntryFields.module.css","components/ContactList/ContactList.module.css","components/ContactList/Items.module.css","components/AppBar/AppBar.module.css","components/AppBar/Logo.module.css","components/AppBar/ThemeSelector.module.css","components/App/ContactListStyles.module.css","components/App/FilterStyles.module.css","contexts/ThemeContext/ThemeContext.js","hoc/withTheme.js","redux/contacts/contactsAction.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/NameOfContactExist/NameOfContactExist.js","components/FillInEntryFields/FillInEntryFields.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ThemeSelector/ThemeSelector.js","components/AppBar/AppBar.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Context","createContext","ThemeContext","toggleTheme","setState","type","state","themeConfig","light","headerBg","fontColor","bodybg","dark","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","axios","defaults","baseURL","headers","post","addContact","name","number","dispatch","contactActions","then","data","catch","err","fetchContacts","get","removeContact","contactId","delete","getContacts","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","toLowerCase","includes","getContactById","find","id","NameOfContactExist","className","styles","text","FillInEntryFields","ContactForm","nameExistErr","entryFieldsErr","handleSubmit","e","preventDefault","checkLength","string","length","checkOnExist","setTimeout","handleChange","target","CSSTransition","in","classNames","entryFieldsStyles","timeout","unmountOnExit","nameExistStyles","contactForm","onSubmit","contactLabel","contactInput","onChange","contactSubmit","mapDispatchToProps","contactsOperations","connect","contactsSelectors","ownProps","onRemoveContact","item","close","onClick","TransitionGroup","component","container","map","key","itemsStyles","onChangeFilter","contactsAction","label","input","checkbox","checked","AppBar","appear","logoStyles","themeSelector","App","onFetchContacts","style","color","background","isLoadingContacts","height","width","position","left","filterStyles","contactListStyles","contactsOperation","contactsSelector","loading","createReducer","_","action","payload","error","fetchError","addError","removeError","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.abd7d2c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2WqQA\",\"contactLabel\":\"ContactForm_contactLabel__2zXQX\",\"contactInput\":\"ContactForm_contactInput__vhxT-\",\"contactSubmit\":\"ContactForm_contactSubmit__35Dw5\",\"active\":\"ContactForm_active__31TcW\",\"nameOfContactExist\":\"ContactForm_nameOfContactExist__2iqKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__bu-eM\",\"label\":\"Filter_label__2StdO\",\"input\":\"Filter_input__42rNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThemeSelector_container__LoW2E\",\"checkbox\":\"ThemeSelector_checkbox__1PNSC\",\"label\":\"ThemeSelector_label__xyaZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__B9ovF\",\"button\":\"ContactListItem_button__1Qv6j\",\"close\":\"ContactListItem_close__48EjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"NameOfContactExist_text__2zsYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"FillInEntryFields_text__38dDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"NameExist_enter__2nxKa\",\"enterActive\":\"NameExist_enterActive__kdpVo\",\"exit\":\"NameExist_exit__2_9GQ\",\"exitActive\":\"NameExist_exitActive__29EhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FillInEntryFields_enter__15ozD\",\"enterActive\":\"FillInEntryFields_enterActive__3V0M2\",\"exit\":\"FillInEntryFields_exit__dUtun\",\"exitActive\":\"FillInEntryFields_exitActive__28YZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__3OfB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Items_enter__3apN1\",\"enterActive\":\"Items_enterActive__hhTm-\",\"exit\":\"Items_exit__KxN8l\",\"exitActive\":\"Items_exitActive__1VaEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppBar_container__7AIPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Logo_appear__2BTzv\",\"appearActive\":\"Logo_appearActive__RWEW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"ThemeSelector_appear__3hL-b\",\"appearActive\":\"ThemeSelector_appearActive__1he-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListStyles_enter__3d2yy\",\"enterActive\":\"ContactListStyles_enterActive__38j7o\",\"exit\":\"ContactListStyles_exit__YBm_b\",\"exitActive\":\"ContactListStyles_exitActive__3DWsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"FilterStyles_enter__1aDp_\",\"enterActive\":\"FilterStyles_enterActive__2E_3x\",\"exit\":\"FilterStyles_exit__3t3Gu\",\"exitActive\":\"FilterStyles_exitActive__3CWRZ\"};","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      type: this.state.type === \"dark\" ? \"light\" : \"dark\"\r\n    });\r\n  };\r\n\r\n  state = {\r\n    type: \"light\",\r\n    themeConfig: {\r\n      light: {\r\n        headerBg: \"#F7B30C\",\r\n        fontColor: \"black\",\r\n        bodybg: \"white\"\r\n      },\r\n      dark: {\r\n        headerBg: \"#3c3c3c\",\r\n        fontColor: \"white\",\r\n        bodybg: \"black\"\r\n      }\r\n    },\r\n    toggleTheme: this.toggleTheme\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <WrappedComponent\r\n            {...props}\r\n            theme={theme}\r\n          />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactsRequest = createAction(\"/contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"/contacts/addSuccess\");\r\nconst addContactsError = createAction(\"/contacts/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"/contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"/contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"/contacts/fetchError\");\r\n\r\nconst removeContactsRequest = createAction(\"/contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"/contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"/contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  changeFilter\r\n};\r\n","import contactActions from \"./contactsAction\";\r\nimport axios from \"axios\";\r\n\r\nconst ownerId = \"f9f2a270-49b1-45db-b304-75c015e05a15\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/v1\";\r\naxios.defaults.headers[\"Authorization\"] = ownerId;\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(contactActions.addContactsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", {\r\n      name,\r\n      number\r\n    })\r\n    .then(({ data }) => dispatch(contactActions.addContactsSuccess(data)))\r\n    .catch(err => dispatch(contactActions.addContactsError(err)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactActions.fetchContactsSuccess(data)))\r\n    .catch(err => dispatch(contactActions.fetchContactsError(err)));\r\n};\r\n\r\nconst removeContact = contactId => dispatch => {\r\n  dispatch(contactActions.removeContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(contactActions.removeContactsSuccess(contactId)))\r\n    .catch(err => dispatch(contactActions.removeContactsError(err)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n  }\r\n);\r\n\r\nconst getContactById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n\r\n  return contacts.find(contact => contact.id === contactId);\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  getContactById\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./NameOfContactExist.module.css\";\r\n\r\nconst NameOfContactExist = () => {\r\n  return <h1 className={styles.text}>Contact already exist!</h1>;\r\n};\r\n\r\nexport default NameOfContactExist;\r\n","import React from \"react\";\r\nimport styles from \"./FillInEntryFields.module.css\";\r\n\r\nconst FillInEntryFields = () => {\r\n  return <h1 className={styles.text}>Please, fill in all required entry fields.</h1>;\r\n};\r\n\r\nexport default FillInEntryFields;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport NameofContactExist from \"../NameOfContactExist/NameOfContactExist\";\r\nimport FillInEntryFields from \"../FillInEntryFields/FillInEntryFields\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport nameExistStyles from \"./NameExist.module.css\";\r\nimport entryFieldsStyles from './FillInEntryFields.module.css'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    nameExistErr: false,\r\n    entryFieldsErr: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const checkLength = string => string.length < 1;\r\n    const checkOnExist = this.props.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n\r\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\r\n      this.setState({ entryFieldsErr: true });\r\n      setTimeout(() => {\r\n        this.setState({ entryFieldsErr: false });\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    if (checkOnExist) {\r\n      this.setState({ nameExistErr: true });\r\n      setTimeout(() => {\r\n        this.setState({ nameExistErr: false });\r\n      }, 1000);\r\n      return;\r\n    }\r\n\r\n    this.props.addContact({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={this.state.entryFieldsErr}\r\n          classNames={entryFieldsStyles}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <FillInEntryFields />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={this.state.nameExistErr}\r\n          classNames={nameExistStyles}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <NameofContactExist />\r\n        </CSSTransition>\r\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={styles.contactLabel}>\r\n            Name\r\n            <input\r\n              className={styles.contactInput}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.contactLabel}>\r\n            Number\r\n            <input\r\n              className={styles.contactInput}\r\n              type=\"text\"\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.contactSubmit} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsOperations.addContact\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className=\"TaskList-text\">\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.close}\r\n        type=\"button\"\r\n        onClick={onRemoveContact}\r\n      ></button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  onRemoveContact: propTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\r\n\r\n  return {\r\n    ...contact\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(contactsOperations.removeContact(ownProps.id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport itemsStyles from \"./Items.module.css\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <div>\r\n      <TransitionGroup component=\"ul\" className={styles.container}>\r\n        {contacts.map(({ id }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={itemsStyles}>\r\n            <ContactListItem id={id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      number: propTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContacts(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: propTypes.string.isRequired,\r\n  onChangeFilter: propTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsAction.changeFilter\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./ThemeSelector.module.css\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\n\r\nconst ThemeSelector = ({ theme }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <span className={styles.label}>{theme.type}</span>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={styles.checkbox}\r\n        checked={theme.type === \"dark\"}\r\n        onChange={() => theme.toggleTheme()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ThemeSelector);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport ThemeSelector from \"../ThemeSelector/ThemeSelector\";\r\nimport styles from \"./AppBar.module.css\";\r\nimport logoStyles from \"./Logo.module.css\";\r\nimport themeSelector from \"./ThemeSelector.module.css\";\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={logoStyles}\r\n        unmountOnExit\r\n      >\r\n        <h2>Phonebook</h2>\r\n      </CSSTransition>\r\n      \r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={themeSelector}\r\n        unmountOnExit\r\n      >\r\n        <ThemeSelector />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport ContactForm from \".././ContactForm/ContactForm\";\r\nimport ContactList from \".././ContactList/ContactList\";\r\nimport Filter from \".././Filter/Filter\";\r\nimport contactsSelector from \"../../redux/contacts/contactsSelectors\";\r\nimport AppBar from \".././AppBar/AppBar\";\r\nimport contactsOperation from \"../../redux/contacts/contactsOperations\";\r\nimport styles from \"./App.module.css\";\r\nimport contactListStyles from \"./ContactListStyles.module.css\";\r\nimport filterStyles from \"./FilterStyles.module.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { themeConfig, type } = this.props.theme;\r\n    return (\r\n      <div\r\n        className={styles.container}\r\n        style={{\r\n          color: themeConfig[type].fontColor,\r\n          background: themeConfig[type].bodybg\r\n        }}\r\n      >\r\n        {this.props.isLoadingContacts && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={50}\r\n            width={50}\r\n            style={{ position: \"absolute\", left: \"50%\" }}\r\n          />\r\n        )}\r\n\r\n        <AppBar />\r\n\r\n        <ContactForm />\r\n\r\n        <CSSTransition\r\n          in={this.props.contacts.length >= 2}\r\n          timeout={250}\r\n          classNames={filterStyles}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={this.props.contacts.length > 0}\r\n          timeout={250}\r\n          classNames={contactListStyles}\r\n          unmountOnExit\r\n        >\r\n          <ContactList />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelector.getContacts(state),\r\n  isLoadingContacts: state.contacts.loading\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperation.fetchContacts\r\n};\r\n\r\nexport default withTheme(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactActions from \"./contactsAction\";\r\n\r\nconst onAddAction = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst onRemoveAction = (state, { payload }) => {\r\n  return state.filter(contact => contact.id !== payload);\r\n};\r\n\r\nconst onChangeFilter = (_, { payload }) => {\r\n  return payload;\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactActions.fetchContactsSuccess]: (_, action) => action.payload,\r\n  [contactActions.addContactsSuccess]: onAddAction,\r\n  [contactActions.removeContactsSuccess]: onRemoveAction\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactActions.changeFilter]: onChangeFilter\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [contactActions.fetchError]: (_, { payload }) => payload,\r\n  [contactActions.addError]: (_, { payload }) => payload,\r\n  [contactActions.removeError]: (_, { payload }) => payload\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactActions.fetchContactsRequest]: () => true,\r\n  [contactActions.fetchContactsSuccess]: () => false,\r\n  [contactActions.fetchContactsError]: () => false,\r\n\r\n  [contactActions.addContactsRequest]: () => true,\r\n  [contactActions.addContactsSuccess]: () => false,\r\n  [contactActions.addContactsError]: () => false,\r\n\r\n  [contactActions.removeContactsRequest]: () => true,\r\n  [contactActions.removeContactsSuccess]: () => false,\r\n  [contactActions.removeContactsError]: () => false\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n  loading\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport ThemeContext from \"../src/contexts/ThemeContext/ThemeContext\";\r\nimport App from \"./components/App/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ThemeContext>\r\n      <App />\r\n    </ThemeContext>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}